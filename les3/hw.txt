3) Какие ситуации, вызывающие рост количества запросов, могут случаться на сервере?
1. Прогревание кэша для БД - в это время все запросы пользователи получают из БД, а не из кэша, т.о. нагрузка на БД в эти моменты возрастает
2. Огромное количество малеьних запросов, которые по нагрузке на серверБД могут сравниться с неоптимальными большими запросами
3. Запросы, которые используют шаблон '%LIKE% ' - полнотестовый поиск довольно сильно тормозит для MySQL
4. Кэширование таблиц, которые очень часто и сильно обновляются - т.о. на поддержание кэша и на запись в БД будет тратиться больше времени, чем только на запись в БД и выборку данных

4) В некоторых случаях MySQL не использует индекс, даже если это возможно. Несколько примеров таких ситуаций приведено ниже:

- Если использование индекса требует от MySQL прохода более чем по 30% строк в данной таблице (в таких случаях просмотр таблицы, по всей видимости, окажется намного быстрее, так как потребуется выполнить меньше операций поиска). 
Следует учитывать, что если подобный запрос использует LIMIT по отношению только к извлекаемой части строк, то MySQL будет применять индекс в любом случае, так как небольшое количество строк можно найти намного быстрее, чтобы вернуть результат.
- Если диапазон изменения индекса может содержать величины NULL при использовании выражений ORDER BY ... DESC.

5) SELECT * FROM table1 USE INDEX (col1_index,col2_index)
  WHERE col1=1 AND col2=2 AND col3=3;

так описываем запрос, который принудительно использует два индекса: col1_index и col2_index